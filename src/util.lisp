(defpackage :lepis.util
  (:use :cl :anaphora)
  (:export #:value<
           #:value=))

(in-package :lepis.util)

(declaim (inline value<))
(defgeneric value< (x y)
  (:method ((x string) (y string))
    (string< x y))
  (:method ((x number) (y number))
    (< x y))
  (:method ((x string) (y number))
    t)
  (:method ((x number) (y string))
    nil)
  (:method ((x string) y)
    t)
  (:method (x (y string))
    nil)
  (:method ((x number) y)
    t)
  (:method (x (y number))
    nil)
  (:method (x y)
    (string< (prin1-to-string x) (prin1-to-string y))))

(declaim (inline value=))
(defgeneric value= (x y)
  (:method ((x string) (y string))
    (string= x y))
  (:method ((x number) (y number))
    (= x y))
  (:method ((x string) y)
    nil)
  (:method (x (y string))
    nil)
  (:method ((x number) y)
    nil)
  (:method (x (y number))
    nil)
  (:method (x y)
    (string= (prin1-to-string x) (prin1-to-string y))))
